stages:
  - test
  - push
  - publish
variables:
  GIT_STRATEGY: clone
services:
  - manticoresearch/manticore

.init_sqls: &init_sqls
  - curl -X POST http://manticoresearch-manticore:9308/sql -d "mode=raw&query=CREATE TABLE test(content text, name text attribute, cat integer)"
  - curl -X POST http://manticoresearch-manticore:9308/sql -d "mode=raw&query=CREATE TABLE test_pq(content text, name text attribute, cat integer) type='pq'"  

python_testing:
  image: python
  stage: test
  only:
    changes:
      - out/manticoresearch-python/**/*
  before_script:
    - *init_sqls
  script:
    - cd out/manticoresearch-python
    - pip install -r requirements.txt
    - python setup.py install
    - python test/test.py

javascript_testing:
  image: node
  stage: test
  only:
    changes:
      - out/manticoresearch-javascript/**/*
  before_script:
    - *init_sqls      
  script:
    - cd out/manticoresearch-javascript
    - npm install --only=dev
    - npm install inherits
    - npm test

java_testing:
  image: maven
  stage: test
  only:
    changes:
      - out/manticoresearch-java/**/*
  before_script:
    - *init_sqls
  script:
    - cd out/manticoresearch-java
    - mvn test

elixir_testing:
  image: elixir
  stage: test
  only:
    changes:
      - out/manticoresearch-elixir/**/*
  before_script:
    - *init_sqls
  script:
    - cd out/manticoresearch-elixir
    - mix local.hex --force
    - mix do deps.get
    - MIX_ENV=test mix test
    
python_push:
  stage: push
  before_script:
    - apt-get update && apt-get install -y git
  only:
    changes:
      - out/manticoresearch-python/**/*    
  script:
    - git remote add manticoresearch-python git@github.com:manticoresoftware/manticoresearch-python.git
    - git fetch manticoresearch-python  
    - git subtree push --prefix=out/manticoresearch-python https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/manticoresoftware/manticoresearch-python.git master
  dependencies:
    - python_testing

javascript_push:
  stage: push
  before_script:
    - apt-get update && apt-get install -y git
  only:
    changes:
      - out/manticoresearch-javascript/**/*
  script:
    - git remote add manticoresearch-javascript git@github.com:manticoresoftware/manticoresearch-javascript.git
    - git fetch manticoresearch-javascript  
    - git subtree push --prefix=out/manticoresearch-javascript https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/manticoresoftware/manticoresearch-javascript.git master
  dependencies:
    - javascript_testing

java_push:
  stage: push
  before_script:
    - apt-get update && apt-get install -y git
  only:
    changes:
      - out/manticoresearch-java/**/*
  script:
    - git remote add manticoresearch-java git@github.com:manticoresoftware/manticoresearch-java.git
    - git fetch manticoresearch-java  
    - git subtree push --prefix=out/manticoresearch-java https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/manticoresoftware/manticoresearch-java.git master
  dependencies:
    - java_testing

elixir_push:
  stage: push
  before_script:
    - apt-get update && apt-get install -y git
  only:
    changes:
      - out/manticoresearch-elixir/**/*
  script:
    - git remote add manticoresearch-elixir git@github.com:manticoresoftware/manticoresearch-elixir.git
    - git fetch manticoresearch-elixir
    - git subtree push --prefix=out/manticoresearch-elixir https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/manticoresoftware/manticoresearch-elixir.git master
  dependencies:
    - elixir_testing
    
javascript_npmjs:
  stage: publish
  when: manual
  image: node
  allow_failure: true
  script:
    - cp $NPMRC  ~/.npmrc
    - cd out/manticoresearch-javascript
    - npm publish

python_pypi:
  stage: publish
  image: python
  when: manual
  allow_failure: true
  script:
    - cd out/manticoresearch-python
    - cp $PYPIRC  ~/.pypirc
    - python -m pip install --user --upgrade twine
    - python setup.py sdist bdist_wheel
    - python -m twine upload dist/*
    
elixir_hex:
  stage: publish
  image: elixir
  when: manual
  allow_failure: true
  script:
    - cd out/manticoresearch-elixir
    - mix local.hex --force
    - mix do deps.get    
    - HEX_API_KEY=$HEXAPIKEY mix hex.publish --yes


java_maven:
  stage: publish
  image: maven
  when: manual
  allow_failure: true
  script:
    - cd out/manticoresearch-java
    - mkdir ~/.m2
    - export GPG_TTY=$(tty)
    - cp $MVNSETTINGS ~/.m2/settings.xml
    - gpg2 --import --batch $PRIVATEKEY
    - mvn verify -Dgpg.passphrase=GPGKEY
    - maven clean deploy
